<Window x:Class="CartaMei.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:s="clr-namespace:System;assembly=mscorlib"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock"
        xmlns:local="clr-namespace:CartaMei"
        xmlns:lwpf="clr-namespace:CartaMei.WPF"
        xmlns:lm="clr-namespace:CartaMei.Models"
        xmlns:lc="clr-namespace:CartaMei.Common;assembly=CartaMeiCommon"
        mc:Ignorable="d"
        Title="{Binding Title}">

    <Window.Resources>

        <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
        <lwpf:EnumerableToVisibilityConverter x:Key="enumerableToVisibilityConverter" />

        <Style x:Key="menuItemStyle" TargetType="{x:Type MenuItem}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsSeparator}" Value="False">
                    <Setter Property="MenuItem.Command" Value="{Binding}" />
                    <Setter Property="MenuItem.Header" Value="{Binding Name}" />
                    <Setter Property="MenuItem.InputGestureText" Value="{Binding ShortcutText}" />
                    <Setter Property="MenuItem.ToolTip" Value="{Binding Description}" />
                    <Setter Property="MenuItem.Icon" Value="{Binding Path=Icon}" />
                    <Setter Property="MenuItem.IsCheckable" Value="{Binding Path=IsCheckable}" />
                    <Setter Property="MenuItem.IsChecked" Value="{Binding Path=IsChecked}" />
                    <Setter Property="MenuItem.IsEnabled" Value="{Binding IsEnabled}" />
                    <Setter Property="MenuItem.ItemsSource" Value="{Binding Children}" />
                    <Setter Property="MenuItem.Visibility" 
                                    Value="{Binding Path=IsVisible, Converter={StaticResource booleanToVisibilityConverter}}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsSeparator}" Value="True">
                    <Setter Property="MenuItem.Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type MenuItem}">
                                <Separator Style="{DynamicResource {x:Static MenuItem.SeparatorStyleKey}}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <DataTemplate x:Key="toolbarButtonTemplate" DataType="{x:Type lc:ButtonModel}">
            <lwpf:SplitButton Command="{Binding}" 
                              ToolTip="{Binding Description}" 
                              IsEnabled="{Binding IsEnabled}"
                              ItemsSource="{Binding Children}"
                              ItemContainerStyle="{StaticResource menuItemStyle}"
                              Style="{DynamicResource ResourceKey={x:Static ToolBar.ButtonStyleKey}}">
            </lwpf:SplitButton>
        </DataTemplate>
        <DataTemplate x:Key="toolbarSeparatorTemplate">
            <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
        </DataTemplate>
        <lwpf:MenuItemTemplateSelector x:Key="toolBarItemTemplateSelector"
                                       ButtonTemplate="{StaticResource toolbarButtonTemplate}" 
                                       SeparatorTemplate="{StaticResource toolbarSeparatorTemplate}" />

        <DataTemplate x:Key="statusTextTemplate">
            <TextBlock Text="{Binding Text}" 
                       Visibility="{Binding IsVisible, Converter={StaticResource booleanToVisibilityConverter}}" />
        </DataTemplate>
        <DataTemplate x:Key="statusProgressTemplate">
            <ProgressBar Value="{Binding Percentage}" 
                         IsIndeterminate="{Binding IsMarquee}"
                         Visibility="{Binding IsVisible, Converter={StaticResource booleanToVisibilityConverter}}"
                         Orientation="Horizontal" />
        </DataTemplate>
        <DataTemplate x:Key="statusSeparatorTemplate">
            <Separator Visibility="{Binding IsVisible, Converter={StaticResource booleanToVisibilityConverter}}" />
        </DataTemplate>
        <lwpf:StatusBarItemTemplateSelector x:Key="statusBarItemTemplateSelector"
                                            TextTemplate="{StaticResource statusTextTemplate}"
                                            ProgressBarTemplate="{StaticResource statusProgressTemplate}"
                                            SeparatorTemplate="{StaticResource statusSeparatorTemplate}" />

        <lwpf:DictionaryTemplateSelector x:Key="adTemplateSelector" />

    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Menu Grid.Row="0" 
              IsMainMenu="True"
              ItemsSource="{Binding Path=Menu}"
              ItemContainerStyle="{StaticResource menuItemStyle}">
        </Menu>

        <ToolBarTray Grid.Row="1">
            <ToolBar ItemsSource="{Binding Tools}"
                     ItemTemplateSelector="{StaticResource toolBarItemTemplateSelector}">
            </ToolBar>
        </ToolBarTray>

        <xcad:DockingManager Grid.Row="2"
                             DataContext="{Binding}"
                             DocumentsSource="{Binding Documents}"
                             AnchorablesSource="{Binding Anchorables}"
                             LayoutItemTemplateSelector="{StaticResource adTemplateSelector}">

            <xcad:DockingManager.LayoutItemContainerStyle>
                <Style TargetType="{x:Type xcad:LayoutItem}">
                    <Setter Property="Title" Value="{Binding Model.Name}" />
                </Style>
            </xcad:DockingManager.LayoutItemContainerStyle>

            <xcad:LayoutRoot>
                <xcad:LayoutPanel Orientation="Horizontal">
                    <xcad:LayoutAnchorablePane DockWidth="250"></xcad:LayoutAnchorablePane>
                    <xcad:LayoutDocumentPane/>
                    <xcad:LayoutAnchorablePane DockWidth="250"></xcad:LayoutAnchorablePane>
                </xcad:LayoutPanel>
            </xcad:LayoutRoot>
            
        </xcad:DockingManager>

        <StatusBar Grid.Row="3" 
                   ItemsSource="{Binding StatusItems}"
                   ItemTemplateSelector="{StaticResource statusBarItemTemplateSelector}">
        </StatusBar>
        
    </Grid>
</Window>
